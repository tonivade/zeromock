apply from: 'gradle/deps.gradle'

buildscript {
  ext {
    nexusPlugin = '2.3.1'
    sonarPlugin = '3.0'
  }

  repositories {
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "com.bmuschko:gradle-nexus-plugin:${nexusPlugin}"
    classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarPlugin}"
  }
}

apply plugin: 'org.sonarqube'

allprojects {
  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'eclipse'
  apply plugin: 'jacoco'
  apply plugin: 'com.bmuschko.nexus'

  group = 'com.github.tonivade'
  version = '0.14.0'

  sourceCompatibility = '1.8'
  targetCompatibility = '1.8'

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
  }

  test {
    useJUnitPlatform()

    jacoco {
      destinationFile = file("${buildDir}/jacoco/test.exec")
    }
  }
  
  compileJava {
    options.release = 8
  }
  
  compileTestJava {
    options.release = 8
  }

  jacoco {
    toolVersion = '0.8.5'
  }

  jacocoTestReport {
    reports {
      xml.enabled = true
      html.enabled = true
      xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
  }
}

subprojects {
  modifyPom {
    project {
      name "ZeroMock-${project.name}"
      description "Mock Http Server (mostly) without dependencies"
      url "https://github.com/tonivade/zeromock"
      inceptionYear '2018'

      scm {
        url 'https://github.com/tonivade/zeromock'
        connection 'scm:https://github.com/tonivade/zeromock.git'
        developerConnection 'scm:git://github.com/tonivade/zeromock.git'
      }

      licenses {
        license {
          name 'The MIT License (MIT)'
          url 'https://github.com/tonivade/zeromock/blob/master/LICENSE'
          distribution 'repo'
        }
      }

      developers {
        developer {
          id 'tonivade'
          name 'Antonio Mu√±oz'
          email 'antoniogmc@gmail.com'
        }
      }
    }
  }

  extraArchive {
    sources = true
    tests = false
    javadoc = true
  }

  nexus {
    sign = true
    repositoryUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
    snapshotRepositoryUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
  }

  dependencies {
    testImplementation libs.junitJupiter
    testImplementation libs.junitVintage
    testRuntime libs.junitRunner
  }
}

def publishedProjects = subprojects.findAll()

task jacocoFullReport(type: JacocoReport, group: 'Coverage reports') {
  description = 'Generates an aggregate report from all subprojects'

  dependsOn(publishedProjects.test)

  additionalSourceDirs.from = files(publishedProjects.sourceSets.main.allSource.srcDirs)
  sourceDirectories.from = files(publishedProjects.sourceSets.main.allSource.srcDirs)
  classDirectories.from = files(publishedProjects.sourceSets.main.output)
  executionData.from = files(publishedProjects.jacocoTestReport.executionData).findAll { it.exists() }

  reports {
    html.enabled = true
    xml.enabled = true
    xml.destination file("${buildDir}/reports/jacoco/report.xml")
  }
}
