plugins {
  id 'java-library'
  id 'jacoco-report-aggregation'
  id 'test-report-aggregation'
  id 'maven-publish'
  id 'signing'
  id "org.sonarqube" version "4.3.1.3277"
  id 'io.github.gradle-nexus.publish-plugin' version "1.3.0"
  id 'com.github.ben-manes.versions' version "0.48.0"
}

apply plugin: 'org.sonarqube'

dependencies {
  jacocoAggregation projects.zeromockServer
  jacocoAggregation projects.zeromockClient
  jacocoAggregation projects.zeromockJunit4
  jacocoAggregation projects.zeromockJunit5

  testReportAggregation projects.zeromockServer
  testReportAggregation projects.zeromockClient
  testReportAggregation projects.zeromockJunit4
  testReportAggregation projects.zeromockJunit5
}

reporting {
  reports {
    testCodeCoverageReport(JacocoCoverageReport) {
      testType = TestSuiteType.UNIT_TEST
    }
    testAggregateTestReport(AggregateTestReport) {
      testType = TestSuiteType.UNIT_TEST
    }
  }
}

tasks.named('check') {
  dependsOn tasks.named('testCodeCoverageReport', JacocoReport) 
  dependsOn tasks.named('testAggregateTestReport', TestReport) 
}

allprojects {
  apply plugin: 'java-library'
  apply plugin: 'jacoco'
  apply plugin: 'maven-publish'
  apply plugin: 'signing'

  group = 'com.github.tonivade'

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(17)
    }
  }
  
  ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

  repositories {
    mavenLocal()
    mavenCentral()
    maven {
      url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }
  }

  jacoco {
    toolVersion = "0.8.9"
  }

  compileJava {
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:rawtypes'
    options.release = 17
  }

  compileTestJava {
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs << '-Xlint:rawtypes'
    options.release = 17
  }

  jacocoTestReport {
    reports {
      xml.required = true
      html.required = true
      xml.outputLocation = file("${buildDir}/reports/jacoco/report.xml")
    }
  }
}

subprojects {

  java {
    withJavadocJar()
    withSourcesJar()
  }

  test {
    useJUnitPlatform()

    jacoco {
      destinationFile = file("${buildDir}/jacoco/test.exec")
    }

    reports.html.required = false
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        
        from components.java

        pom {
          name = "ZeroMock-${project.name}"
          description = "Mock Http Server (mostly) without dependencies"
          url = "https://github.com/tonivade/zeromock"
          inceptionYear = '2018'

          scm {
            url = 'https://github.com/tonivade/zeromock'
            connection = 'scm:https://github.com/tonivade/zeromock.git'
            developerConnection = 'scm:git://github.com/tonivade/zeromock.git'
          }

          licenses {
            license {
              name = 'The MIT License (MIT)'
              url = 'https://github.com/tonivade/zeromock/blob/master/LICENSE'
              distribution = 'repo'
            }
          }

          developers {
            developer {
              id = 'tonivade'
              name = 'Antonio MuÃ±oz'
              email = 'antoniogmc@gmail.com'
            }
          }
        }
      }
    }
  }

  signing {
    sign publishing.publications.mavenJava
  }
  
  tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
  }

  dependencies {
    testImplementation libs.junitJupiter
    testImplementation libs.junitVintage
    testRuntimeOnly libs.junitRunner
  }
}

nexusPublishing {
  repositories {
    sonatype {
      
      stagingProfileId = '19a96b937cdb5'
      
      username = project.findProperty('nexusUsername')  
      password = project.findProperty('nexusPassword')
    }
  }
  
  clientTimeout = Duration.ofSeconds(300)
  connectTimeout = Duration.ofSeconds(60)

  transitionCheckOptions {
    maxRetries.set(40)
    delayBetween.set(Duration.ofMillis(3000))
  }
}
